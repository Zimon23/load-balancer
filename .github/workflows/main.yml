#출력되는 이름
name: 빌드 및 배포
#개발자 저장소에서 push 하면 진행할것, main branch에서만

on:
  push:
    branches: [ main ]

jobs:
  build-docker-image:
  #github 가상머신이나 운영서버으 배포/실행에 해당하는 걸 나타낸다고
    runs-on: ubuntu-latest
    #shell 명령어를 사용할 수 있음 사용해볼 예정
    steps:
      - name: 원격저장소에서 소스를 복사
        uses: actions/checkout@v3

      - name: Dockerfile 복사
        run: 
      - name: image building   #name뒤에 실행하려면 run 앞에 - 가 없어야 한다   
        run: docker build -t zimonhwang1/my-images-name:latest .
      
      - name: docker hub에 로그인을 한다.
        run : docker login -u zimonhwang1 -p ${{ secrets.DOCKER_HUB_PASSWORD}}

      - name: docker hub에 push 한다.
        run: docker push zimonhwang1/my-images-name:latest
      

  deploy:
    needs: build-docker-image
    #needs가 없으면 병렬로 돈다고, needs가 있어야 build-docker-image가 끝나고 실행됨
    name: deploy
    runs-on: [self-hosted, linux, x64]
    steps:    
      - name: 기존 서비스 제거
        run: docker service rm my-images-name || echo "서비스 없음, 계속 진행"
      - name: Docker Hub 로그인 (안전)
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u zimonhwang1 --password-stdin
      - name: 이미지 Pull
        run: docker pull zimonhwang1/my-images-name:latest
      - name: 기존 서비스 제거 후 새 서비스 생성
        run: |
          docker service create \
              --name my-images-name \
              --publish published=8014,target=8014 \
              --replicas 3 \
              zimonhwang1/my-images-name:latest
                    